apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Release.Name }}
  labels:
    app: {{ template "fairspace.name" . }}
    {{- include "fairspace.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fairspace
      release: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: fairspace
        release: {{ .Release.Name }}
{{- if .Values.podAnnotations.fairspace }}
      annotations:
{{ toYaml .Values.podAnnotations.fairspace | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: postgres-database
          image: postgres:13-alpine
          volumeMounts:
            - name: postgres-disk
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_DB
              value: postgresdb
            - name: POSTGRES_USER
              value: fairspace
            - name: POSTGRES_PASSWORD
              value: fairspace
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
        - name: {{ .Release.Name }}-pluto
          image: "{{ .Values.pluto.image.image }}:{{ .Values.pluto.image.tag }}"
          imagePullPolicy: {{ .Values.pluto.image.pullPolicy }}
          ports:
            - containerPort: 8080
          env:
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-oauth-client"
                  key: clientSecret
          volumeMounts:
            - name: config-volume-pluto
              mountPath: /opt/config
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: {{ .Values.pluto.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.pluto.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.pluto.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.pluto.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path:  /actuator/health
              port: 8080
            periodSeconds: {{ .Values.pluto.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.pluto.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.pluto.readinessProbe.timeoutSeconds }}
          resources:
{{ toYaml .Values.pluto.resources | indent 12 }}
        - name: {{ .Release.Name }}-saturn
          image: "{{ .Values.saturn.image.image }}:{{ .Values.saturn.image.tag }}"
          imagePullPolicy: {{ .Values.saturn.image.pullPolicy }}
          ports:
            - containerPort: 8090
          env:
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-oauth-client"
                  key: clientSecret
            - name: AUDIT_LOG_ROOT
              value: /data/saturn/audit
{{- if .Values.saturn.loglevel }}
            - name: LOG_LEVEL
              value: {{ .Values.saturn.loglevel | quote }}
{{- end }}
          volumeMounts:
            - name: config-volume-saturn
              mountPath: /opt/config
            - name: database
              mountPath: /data/saturn/db
            - name: files
              mountPath: /data/saturn/files
            - name: audit
              mountPath: /data/saturn/audit
          livenessProbe:
            httpGet:
              path:  /api/health/
              port: 8090
            initialDelaySeconds: {{ .Values.saturn.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.saturn.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.saturn.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.saturn.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path:  /api/health/
              port: 8090
            periodSeconds: {{ .Values.saturn.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.saturn.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.saturn.readinessProbe.timeoutSeconds }}
          resources:
{{ toYaml .Values.saturn.resources | indent 12 }}
      volumes:
      - name: config-volume-saturn
        configMap:
          name: {{ .Release.Name }}-saturn
      - name: config-volume-pluto
        configMap:
          name: {{ .Release.Name }}-pluto
  volumeClaimTemplates:
  - metadata:
      name: postgres-disk
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgres.persistence.storage.size | quote }}
  - metadata:
      name: audit
      labels:
        app: saturn
{{- include "fairspace.labels" . | nindent 8 }}
{{- if .Values.saturn.persistence.audit.annotations }}
      annotations:
{{ toYaml .Values.saturn.persistence.audit.annotations | indent 8 }}
{{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.saturn.persistence.audit.size | quote }}
{{- if .Values.saturn.persistence.audit.storageClass }}
  {{- if (eq "-" .Values.saturn.persistence.audit.storageClass) }}
      storageClassName: ""
  {{- else }}
      storageClassName: {{ .Values.saturn.persistence.audit.storageClass | quote }}
  {{- end }}
{{- end }}
  - metadata:
      name: database
      labels:
        app: saturn
{{- include "fairspace.labels" . | nindent 8 }}
{{- if .Values.saturn.persistence.database.annotations }}
      annotations:
{{ toYaml .Values.saturn.persistence.database.annotations | indent 8 }}
{{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.saturn.persistence.database.size | quote }}
{{- if .Values.saturn.persistence.database.storageClass }}
  {{- if (eq "-" .Values.saturn.persistence.database.storageClass) }}
      storageClassName: ""
  {{- else }}
      storageClassName: {{ .Values.saturn.persistence.database.storageClass | quote }}
  {{- end }}
{{- end }}
  - metadata:
      name: files
      labels:
        app: saturn
{{- include "fairspace.labels" . | nindent 8 }}
{{- if .Values.saturn.persistence.files.annotations }}
      annotations:
{{ toYaml .Values.saturn.persistence.files.annotations | indent 8 }}
{{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.saturn.persistence.files.size | quote }}
{{- if .Values.saturn.persistence.files.storageClass }}
  {{- if (eq "-" .Values.saturn.persistence.files.storageClass) }}
      storageClassName: ""
  {{- else }}
      storageClassName: {{ .Values.saturn.persistence.files.storageClass | quote }}
  {{- end }}
{{- end }}
