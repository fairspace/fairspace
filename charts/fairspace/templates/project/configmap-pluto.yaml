apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-pluto
  labels:
    app: pluto
    {{- include "fairspace.labels" . | nindent 4 }}
data:
  application.yaml: |-
    pluto:
      domains:
        - {{ template "fairspace.url" . }}
{{ if .Values.pluto.externalDomains }}{{ toYaml .Values.pluto.externalDomains | indent 8 }}{{ end }}
      downstreamServiceHealthUrl: {{ .Values.pluto.backends.saturn | default "http://localhost:8090"}}/api/health/
      max-file-size: {{ .Values.pluto.maxFileSize }}
      staticHtmlLocation: /opt/mercury
      oauth2:
        base-url: {{ .Values.external.keycloak.baseUrl }}
        realm: {{ .Values.external.keycloak.realm }}
      storages:
{{ toYaml .Values.fairspace.storages | indent 8 }}

    management:
      endpoint:
        health:
          probes:
            enabled: true

    logging:
      level:
        root: {{ .Values.pluto.logLevel }}

    server:
      error:
        whitelabel:
          enabled: false
      max-http-header-size: 65535

    security:
      oidc:
        redirect-after-logout-url: {{ template "fairspace.scheme" . }}://{{ .Values.fairspace.ingress.domain }}/login
        clientId: {{ .Values.external.keycloak.clientId }}
        clientSecret: '{{ .Values.external.keycloak.clientSecret }}'

    spring:
      cloud:
        gateway:
          routes:
{{ if .Values.pluto.backends.storageRoutes }}
{{ toYaml .Values.pluto.backends.storageRoutes | indent 8 }}
{{ end }}
          - id: saturn-post-request-size
            uri: {{ .Values.pluto.backends.saturn | default "http://localhost:8090/api/" }}
            predicates:
            - Method=POST
            - Path=/api/**
            filters:
            - name: RequestSize
              args:
                maxSize: ${pluto.max-file-size}
          - id: saturn
            uri: {{ .Values.pluto.backends.saturn | default "http://localhost:8090"}}
            predicates:
            - Path=/api/**
          default-filters:
            - RemoveRequestHeader=Pragma X-Frame-Options X-Content-Type-Options X-XSS-Protection X-Permitted-Cross-Domain-Policies Origin
            # Including the ORIGIN header would trigger CORS filtering downstream, but Pluto is already doing the filtering.
          httpclient:
            connect-timeout: {{ .Values.pluto.connectTimeoutMillis }}
            response-timeout: {{ .Values.pluto.responseTimeoutMillis }}
