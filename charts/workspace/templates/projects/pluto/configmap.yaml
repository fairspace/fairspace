apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "pluto.fullname" . }}
  labels:
    app: pluto
    chart: {{ template "workspace.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  application.yaml: |-
    app:
      apiVersion:
        pluto: v1
        saturn: v1
        elasticSearch: v1
      domains:
        - {{ template "workspace.url" . }}
        - {{ template "docs.url" . }}
      oauth2:
        base-url: {{ template "keycloak.baseUrl" . }}
        realm: {{ .Values.hyperspace.keycloak.realm }}

    security:
      oidc:
        redirect-after-logout-url: {{ .Values.pluto.keycloak.redirectAfterLogoutUrl | default (include "workspace.url" .) }}
        required-authority: {{ .Values.workspace.keycloak.roles.user | default (printf "user-%s" (include "workspace.name" .)) }}
      urls:
        # Please note that by default pluto is configured to allow certain urls anonymously
        # (e.g. login or health), and is configured to require specific authorization for anything else
        # This configuration will make sure that all frontend resources can be accessed for anyone
        # that has logged in, even if the user does not have the required authority. This enables the
        # frontend to show a nice error message
        needsAuthentication:
        - /*
        - /static/**
        - /public/**
        - /config/**
        - "*.js"
        - /api/${app.apiVersion.pluto}/account/*
        - /metadata/**
        - /iri/**
        - /collections/**
        - /vocabulary/**
        - /notebooks/**
        - /api/${app.apiVersion.saturn}/users/**`

    spring:
      zipkin:
        enabled: {{ .Values.tracing.enabled }}
        base-url: {{ .Values.tracing.baseUrl }}

    zuul:
      retryable: false
      host:
        connect-timeout-millis: {{ .Values.pluto.connectTimeoutMillis }}
        socket-timeout-millis: {{ .Values.pluto.socketTimeoutMillis }}

      routes:
        # Please note that the order of the routes is relevant
        # The elasticsearch route must be defined before
        # saturn, which must be defined before ui, because of the
        # paths they listen to
        elasticsearch:
          # The path contains 'fairspace' in the url, wheres the upstream url contain
          # the actual index name. This allows the clients to be unaware of the specific
          # index name and just use 'fairspace'
          path: /api/${app.apiVersion.elasticSearch}/search/fairspace/_search/**
          url: {{ template "elasticsearch.resturl" . }}
          strip-prefix: true
        storage:
          path: /webdav/${app.apiVersion.saturn}/**
          strip-prefix: false
          url: {{ .Values.pluto.backends.saturn | default (printf "http://%s-saturn.%s.svc.cluster.local" .Release.Name .Release.Namespace)}}
        saturn:
          path: /api/${app.apiVersion.saturn}/**
          strip-prefix: false
          url: {{ .Values.pluto.backends.saturn | default (printf "http://%s-saturn.%s.svc.cluster.local" .Release.Name .Release.Namespace)}}
        ui:
          path: /**
          url: {{ .Values.pluto.backends.ui | default (printf "http://%s-mercury.%s.svc.cluster.local" .Release.Name .Release.Namespace)}}
