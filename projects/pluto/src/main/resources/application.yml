pluto:
  oauth2:
    base-url: http://localhost:5100
    backend-url: ${KEYCLOAK_BACKEND_URL:${pluto.oauth2.base-url}}
    realm: fairspace
  max-file-size: 2GB
  staticHtmlLocation:
server:
  error:
    whitelabel:
      enabled: false
  max-http-header-size: 65535

spring:
  application:
    name: Pluto
  main:
    web-application-type: reactive
  sleuth:
    sampler:
      probability: 1.0
  webflux:
    static-path-pattern: "/**"
  web:
    resources:
      static-locations: classpath:static,${pluto.staticHtmlLocation}
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
      routes:
      default-filters:
      - RemoveRequestHeader=Pragma X-Frame-Options X-Content-Type-Options X-XSS-Protection X-Permitted-Cross-Domain-Policies Origin
        # Including the ORIGIN header would trigger CORS filtering downstream, but Pluto is already doing the filtering.
      - name: Retry
        args:
          methods: GET,PUT,POST,DELETE
          exceptions:
            - reactor.netty.http.client.PrematureCloseException
      httpclient:
        connect-timeout: 2000
        response-timeout: 600s
        pool:
          max-idle-time: 20s
      x-forwarded:
        port-enabled: false
        host-enabled: false
        proto-enabled: false
        prefix-enabled: false
        port-append: false
        host-append: false
        proto-append: false
        prefix-append: false
        enabled: false

management:
  endpoint:
    health:
      show-details: always
  health:
    diskspace:
      enabled: false

logging:
  level:
    root: INFO

security:
  oidc:
    auth-url: ${pluto.oauth2.base-url}/realms/${pluto.oauth2.realm}/protocol/openid-connect/auth
    logout-url: ${pluto.oauth2.base-url}/realms/${pluto.oauth2.realm}/protocol/openid-connect/logout?post_logout_redirect_uri=%s&id_token_hint=%s
    token-url: ${pluto.oauth2.backend-url}/realms/${pluto.oauth2.realm}/protocol/openid-connect/token
    jwk-key-set-url: ${pluto.oauth2.backend-url}/realms/${pluto.oauth2.realm}/protocol/openid-connect/certs
    redirect-after-logout-url: ${pluto.oauth2.base-url}
    clientId: workspace-client
    clientSecret: ${KEYCLOAK_CLIENT_SECRET}
    scope: openid

  # Specify urls for security configuration.
  # URLs with permitAll do not require any authentication
  # All other URLs need an authorized user.
  urls:
    permitAll:
    - /actuator/health
    - /actuator/health/*
    - /error
    - /manifest.json
    - /login
    - /logout
    - /authorize
    - /favicon.ico
    - /icons/*
