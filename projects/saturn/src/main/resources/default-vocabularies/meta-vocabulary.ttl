@prefix fs: <http://fairspace.io/ontology#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dash: <http://datashapes.org/dash#> .

<ignoredPropertiesCollection>
   rdf:first rdf:type ;
   rdf:rest ( owl:sameAs sh:ignoredProperties sh:message fs:machineOnly
              fs:fixedShape fs:systemProperties sh:closed fs:createdBy
              fs:dateCreated fs:modifiedBy fs:dateModified
              fs:deletedBy fs:dateDeleted ) .

fs:ClassShapeMetaShape a sh:NodeShape ;
    sh:closed true ;
    sh:description "Shape of classes." ;
    sh:name "Class Shape" ;
    sh:property [
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        dash:singleLine true ;
        sh:minCount 1 ;
        sh:path sh:name ;
        fs:importantProperty true ;
        sh:name "Class name" ;
        sh:order 1
    ], [
        # This means every value for predicate sh:property should have this type.
        a fs:RelationShape ;
        sh:class sh:PropertyShape ;
        sh:minCount 1 ;
        sh:path sh:property ;
        sh:name "Properties" ; 
        sh:description "List of all properties and relations for this class." ;
        fs:inverseRelation fs:domainIncludes ;
        sh:order 3
    ], [
        # This nodeKind restriction could be replaced by something like
        # sh:class fs:Class. Currently that restriction will limit our
        # options to add new shapes
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:minCount 1 ;
        sh:path sh:targetClass ; 
        sh:name "Target class" ;
        fs:importantProperty true ;
        sh:description "IRI of the class this shape constrains." ;
        sh:order 0
    ], [
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:minCount 1 ;
        sh:path sh:description ;
        sh:name "Class description" ;
        fs:importantProperty true ;
        sh:order 2
    ] ;
    sh:not fs:ShapeIsAClosedShape ;
    sh:targetClass fs:ClassShape ;
    sh:ignoredProperties <ignoredPropertiesCollection> .

fs:ExternalIRIPropertyShapeMetaShape a sh:NodeShape ;
    sh:closed true ;
    sh:description "Shape of FS defined properties." ;
    sh:name "External IRI Property" ;
    sh:property
        fs:PropertyNameShape, 
        fs:MinCountShape,
        fs:MaxCountShape, 
        fs:DescriptionShape,
        fs:ImportantPropertyShape,
        fs:PathShape,
        fs:domainIncludes,
    [
        sh:maxCount 1 ;
        sh:minCount 1 ;
        sh:path sh:nodeKind ;
        sh:name "Property node kind" ;
        sh:in ( sh:IRI )
    ], [
        sh:datatype xsd:boolean ;
        sh:maxCount 1 ;
        sh:path fs:externalLink ;
        sh:name "Show as external rdfLink" ;
        sh:description "If this flag is set to true, a rdfLink to a IRI for this property will not be loaded in the metadata editor"
    ] ;
    sh:targetClass fs:ExternalIRIPropertyShape ;
    sh:ignoredProperties <ignoredPropertiesCollection> .

fs:DatatypePropertyShapeMetaShape a sh:NodeShape ;
    sh:closed true ;
    sh:description "Shape of FS defined properties." ;
    sh:name "Datatype Property" ;
    sh:property 
        fs:PropertyNameShape, 
        fs:MinCountShape,
        fs:MaxCountShape, 
        fs:DescriptionShape,
        fs:ImportantPropertyShape,
        fs:PathShape,
        fs:DatatypeShape,
        fs:singleLineShape,
        fs:domainIncludes,
    [
        sh:datatype xsd:integer ;
        sh:path sh:maxLength ;
        sh:maxCount 1 ;
        sh:name "Maximum length (for string only)"
    ] ;
    sh:targetClass fs:DatatypePropertyShape ;
    sh:ignoredProperties <ignoredPropertiesCollection> .

fs:ControlledVocabularyPropertyShapeMetaShape a sh:NodeShape ;
    sh:closed true ;
    sh:description "Shape of FS defined properties." ;
    sh:name "Controlled Vocabulary Property" ;
    sh:property 
        fs:PropertyNameShape,
        fs:MinCountShape,
        fs:MaxCountShape,
        fs:DescriptionShape,
        fs:ImportantPropertyShape,
        fs:PathShape,
        fs:domainIncludes,
    [
        sh:path sh:in ;
        sh:maxCount 1 ;
        sh:minCount 1 ;
        sh:name "Controlled vocabulary" ;
        sh:node dash:ListShape ;
        sh:property [
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ;
            sh:minLength 1 ;
        ] ;
        sh:order 3 
    ] ;
    sh:targetClass fs:ControlledVocabularyPropertyShape ;
    sh:ignoredProperties <ignoredPropertiesCollection> .

fs:RelationShapeMetaShape a sh:NodeShape ;
    sh:closed true ;
    sh:description "Shape of FS defined relations." ;
    sh:name "Relation" ;
    sh:property 
        fs:inverseRelationShape, 
        fs:PropertyNameShape, 
        fs:MinCountShape,
        fs:MaxCountShape, 
        fs:DescriptionShape,
        fs:PathShape,
        fs:relationDomainIncludes,
    [
        # This nodeKind restriction could be replaced by something like
        # sh:class fs:Class. Currently that restriction will limit our
        # options to add new shapes
        sh:nodeKind sh:IRI ;
        sh:path sh:class ;
        sh:maxCount 1 ;
        sh:minCount 1 ;
        sh:name "Class target" ;
        fs:importantProperty true ;
        sh:order 3
    ] ;
    sh:targetClass fs:RelationShape ;
    sh:ignoredProperties <ignoredPropertiesCollection> .

sh:PrefixDeclaration a sh:NodeShape, rdfs:Class ;
    sh:targetClass sh:PrefixDeclaration ; 
    sh:closed true ;
    sh:description "Add a namespace with a preferred prefix that can be used within the workspace to shorten IRIs" ;
    sh:name "Namespace" ;
    sh:ignoredProperties <ignoredPropertiesCollection> ;
    sh:property
        fs:PropertyNameShape,
        [
          sh:name "Prefix" ;
          sh:description "A short name to make full IRIs within this namespace more readable: e.g. foaf" ;
          sh:maxLength 24 ;
          sh:minCount 1 ;
          sh:maxCount 1 ;
          sh:datatype xsd:string ;
          dash:singleLine true ;
          sh:path sh:prefix
        ] ,
        [
          sh:name "Namespace IRI" ;
          sh:description "The part of a namespace to abbreviate using the prefix, this is expected to end with '#' or '/' sign: e.g. http://xmlns.com/foaf/0.1/" ;
          sh:minCount 1 ;
          sh:maxCount 1 ;
          sh:nodeKind sh:IRI ;
          fs:externalLink true ;
          sh:path sh:namespace ;
          sh:pattern "[#/]$" ;
          sh:message "Namespace IRI is expected to end with either '#' or '/' sign."
        ] ,
        [
          sh:name "Use in metadata" ;
          sh:description "If true, this namespace is presented to users in the metadata application, to easily create new resources within this namespace." ;
          sh:maxCount 1 ;
          sh:datatype xsd:boolean ;
          sh:path fs:usableInMetadata
        ] ,
        [
          sh:name "Use in vocabulary" ;
          sh:description "If true, this namespace is presented to users in the vocabulary application, to define new terms within this namespace." ;
          sh:maxCount 1 ;
          sh:datatype xsd:boolean ;
          sh:path fs:usableInVocabulary
        ] ,
        [
          sh:name "Default namespace" ;
          sh:description "When a user creates a new resource, a default namespace will be selected automatically" ; 
          sh:maxCount 1 ;
          sh:datatype xsd:boolean ;
          sh:path fs:defaultNamespace
        ] .

fs:inverseRelationShape a fs:RelationShape ;
    fs:inverseRelation fs:inverseRelationShape ;
    sh:path fs:inverseRelation ;
    sh:class fs:RelationShape ;
    sh:maxCount 1 ;
    sh:name "Inverse relation" ;
    sh:description "An inverse relation has at most a single relation shape instance as value. A shape with sh:path P1 and fs:inverseRelationShape S2 with sh:path P2 has equivalent meaning as P1 owl:inverseOf P2." ;
    sh:path fs:inverseRelation . 

fs:domainIncludes a fs:RelationShape ;
    fs:inverseRelation [
        a sh:PropertyShape ;
        sh:path sh:property 
        ] ;
    sh:path fs:domainIncludes ;
    sh:class fs:ClassShape ;
    sh:order 3 ;
    sh:name "Domain Includes" ;
    sh:description "All class shapes that include this property." .

fs:relationDomainIncludes a fs:RelationShape ;
    fs:inverseRelation [
        a sh:PropertyShape ;
        sh:path sh:property
        ] ;
    sh:path fs:domainIncludes ;
    sh:class fs:ClassShape ;
    sh:order 3 ;
    sh:name "Domain Includes" ;
    sh:description "The class shape that includes this relation." ;

    # Additional validation for relations as we currently do not support
    # linking more than 2 classes through a single relation. This fails
    # in table rendering and in the search box. Could be fixed later.
    sh:maxCount 1 .

fs:fixedShapeShape a fs:DatatypePropertyShape ;
    sh:datatype xsd:boolean ;
    sh:path fs:fixedShape ;
    fs:machineOnly true ; 
    sh:maxCount 1 ;
    sh:name "Fixed shape" ;
    sh:description "If this is true, a user can not make changes to this shape definition." .

fs:singleLineShape a fs:DatatypePropertyShape ;
    sh:datatype xsd:boolean ;
    sh:path dash:singleLine ;
    sh:maxCount 1 ; 
    sh:name "Single line input (for string only)" ;
    sh:description "Restricts the input field for this string field to a single line." .

fs:machineOnlyShape a fs:DatatypePropertyShape ; 
    sh:datatype xsd:boolean ;
    sh:path fs:machineOnly ;
    fs:machineOnly true ;
    sh:name "Machine edits only" ;
    sh:description "Users should not be able to change the value of any value node of this shape." .

fs:systemPropertiesShape a sh:PropertyShape ;
    sh:path fs:systemProperties ;
    fs:machineOnly true ;
    sh:name "System properties" ;
    sh:description "Users are only allowed to add or remove a value for sh:property of the focus node if it is not a value of fs:systemProperties." .

fs:ShapeIsAClosedShape a sh:PropertyShape ;
  sh:hasValue true ;
  sh:description "A fs:ClassShape shape cannot be defined as sh:closed true." ;
  sh:path sh:closed .

fs:PathShape a sh:PropertyShape ; 
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path sh:path ;
  sh:nodeKind sh:IRI ;
  sh:name "Property identifier" ;
  fs:importantProperty true ;
  sh:order 0 .

fs:PropertyNameShape a sh:PropertyShape ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  dash:singleLine true ;
  sh:minCount 1 ;
  sh:path sh:name ;
  sh:name "Name" ;
  fs:importantProperty true ;
  sh:order 1 .

fs:DescriptionShape a sh:PropertyShape ; 
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path sh:description ;
  sh:name "Property description" ;
  fs:importantProperty true ;
  sh:order 2 .

fs:MinCountShape a sh:PropertyShape ; 
  sh:datatype xsd:integer ;
  sh:path sh:minCount ;
  sh:maxInclusive 1 ;
  sh:maxCount 1 ;
  sh:lessThanOrEquals sh:maxCount ;
  sh:name "Minimum number of values" ;
  sh:order 9 .

fs:MaxCountShape a sh:PropertyShape ; 
  sh:datatype xsd:integer ;
  sh:path sh:maxCount ;
  sh:maxCount 1 ;
  sh:greaterThanOrEquals sh:minCount ;
  sh:minInclusive 1 ;
  sh:name "Maximum number of values" ; 
  sh:order 10 . 

fs:ImportantPropertyShape a sh:PropertyShape ;
  sh:datatype xsd:boolean ;
  sh:maxCount 1 ;
  sh:path fs:importantProperty ;
  sh:name "Show this property as a column in a table " .

fs:DatatypeShape a sh:PropertyShape ;
    sh:path sh:datatype ;
    # direct controlled vocabulary approach
    sh:in ( xsd:string xsd:integer xsd:date xsd:dateTime xsd:long xsd:boolean )  ;
    sh:name "Datatype" ;
    fs:importantProperty true ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:order 3 .

# Definitions of our shape types, needed
# for form building
fs:ClassShape a sh:NodeShape .
fs:DatatypePropertyShape rdfs:subClassOf sh:PropertyShape .
fs:ControlledVocabularyPropertyShape rdfs:subClassOf sh:PropertyShape .
fs:ExternalIRIPropertyShape rdfs:subClassOf sh:PropertyShape .
fs:RelationShape rdfs:subClassOf sh:PropertyShape .

# Definition for property shape, used to render a table with properties
sh:PropertyShape
    sh:targetClass sh:PropertyShape ;
    fs:machineOnly true ;
    sh:property
        fs:PropertyNameShape,
        fs:DescriptionShape,
        fs:PathShape,
        [
            sh:path sh:datatype ;
            sh:name "Datatype" ;
            sh:nodeKind sh:IRI ;
            fs:importantProperty true ;
            sh:order 2
        ] .

